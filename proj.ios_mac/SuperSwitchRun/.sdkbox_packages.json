{
    "sdkboxads": {
        "engine": "3", 
        "name": "sdkboxads", 
        "args": {
            "patcherrors": 0, 
            "project": "./", 
            "noupdate": 0, 
            "nopatchingcpp": 0, 
            "remote": 1, 
            "verbose": 0, 
            "forcecopy": 0, 
            "nohelp": 0, 
            "days": 10, 
            "server": "download.sdkbox.com/installer/v1/", 
            "forcedownload": 0, 
            "command": "import", 
            "alwaysupdate": 0, 
            "installer": "", 
            "manifest": "manifest.json", 
            "local": 0, 
            "nopatching": 0, 
            "jsonapi": 0
        }, 
        "version": [
            2, 
            6, 
            0, 
            1
        ], 
        "result": "ok", 
        "message": "success", 
        "constants": {
            "code": "dependencies { compile 'com.google.android.gms:play-services-base:16.1.0' }\n", 
            "ANDROID_STUDIO_JNI_DIR": "proj.android/app/jni/", 
            "COCOS_2DX_VERSION": "3.17.2", 
            "COCOS_PROJECT_DIR": "./", 
            "VS_PROJECT_DIR": "n/a", 
            "COCOS_2DX_INSTALLATION_VERSION": "unknown", 
            "proguard_rules": "proj.android/app/proguard-rules.pro", 
            "ANDROID_COCOS_PACKAGE_ROOT": "proj.android/app/", 
            "source_dir": "${CMAKE_CURRENT_SOURCE_DIR}", 
            "flag_line": "setup_cocos_app_config(${APP_NAME})", 
            "marr3": [
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginSdkboxAds\")", 
                "    endif()", 
                "endif()"
            ], 
            "marr2": [], 
            "marr1": [
                "# PluginSdkboxAds", 
                "if(ANDROID)", 
                "    add_definitions(-DSDKBOX_ENABLED)", 
                "    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginSdkboxAds/)", 
                "    target_link_libraries(${APP_NAME} ext_PluginSdkboxAds)", 
                "elseif(APPLE)", 
                "    if(IOS)"
            ], 
            "ANDROID_STUDIO_ACTIVITY_NAME": "AppActivity", 
            "CCC_ENGINE_VERSION": "3.17.2", 
            "XCODE_PROJECT_PREPROCESSOR": "", 
            "proguard_file": "n/proguard-project.txt", 
            "ANDROID_STUDIO_PROJECT_DIR": "proj.android/", 
            "VS_PROJECT_SLN_FILE": "n/a", 
            "content": "#/****************************************************************************\n# Copyright (c) 2013-2014 cocos2d-x.org\n# Copyright (c) 2015-2017 Chukong Technologies Inc.\n#\n# http://www.cocos2d-x.org\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE.\n# ****************************************************************************/\n\ncmake_minimum_required(VERSION 3.6)\n\nset(APP_NAME SuperSwitchRun)\n\nproject(${APP_NAME})\n\nset(COCOS2DX_ROOT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cocos2d)\nset(CMAKE_MODULE_PATH ${COCOS2DX_ROOT_PATH}/cmake/Modules/)\n\ninclude(CocosBuildSet)\nadd_subdirectory(${COCOS2DX_ROOT_PATH}/cocos ${ENGINE_BINARY_PATH}/cocos/core)\n\n# record sources, headers, resources...\nset(GAME_SOURCE)\nset(GAME_HEADER)\n\nset(GAME_RES_FOLDER\n    \"${CMAKE_CURRENT_SOURCE_DIR}/Resources\"\n    )\nif(APPLE OR WINDOWS)\n    cocos_mark_multi_resources(common_res_files RES_TO \"Resources\" FOLDERS ${GAME_RES_FOLDER})\n# ShareResBundle\n    if(IOS)\n        set(ShareResBundle0 \"${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac/TwitterKit.framework/TwitterKitResources.bundle\")\n        list(APPEND common_res_files ${ShareResBundle0})\n        set_source_files_properties(${ShareResBundle0} PROPERTIES MACOSX_PACKAGE_LOCATION Resources)\n    endif()\nendif()\n\n# add cross-platforms source files and header files \nlist(APPEND GAME_SOURCE\n     Classes/AppDelegate.cpp\n     Classes/HelloWorldScene.cpp\n     )\nlist(APPEND GAME_HEADER\n     Classes/AppDelegate.h\n     Classes/HelloWorldScene.h\n     )\n\nif(ANDROID)\n    # change APP_NAME to the share library name for Android, it's value depend on AndroidManifest.xml\n    set(APP_NAME MyGame)\n    list(APPEND GAME_SOURCE\n         proj.android/app/jni/hellocpp/main.cpp\n         )\nelseif(LINUX)\n    list(APPEND GAME_SOURCE\n         proj.linux/main.cpp\n         )\nelseif(WINDOWS)\n    list(APPEND GAME_HEADER\n         proj.win32/main.h\n         proj.win32/resource.h\n         )\n    list(APPEND GAME_SOURCE\n         proj.win32/main.cpp\n         proj.win32/game.rc\n         ${common_res_files}\n         )\nelseif(APPLE)\n    if(IOS)\n        list(APPEND GAME_HEADER\n             proj.ios_mac/ios/AppController.h\n             proj.ios_mac/ios/RootViewController.h\n             )\n        set(APP_UI_RES\n            proj.ios_mac/ios/LaunchScreen.storyboard\n            proj.ios_mac/ios/LaunchScreenBackground.png\n            proj.ios_mac/ios/Images.xcassets\n            )\n        list(APPEND GAME_SOURCE\n             proj.ios_mac/ios/main.m\n             proj.ios_mac/ios/AppController.mm\n             proj.ios_mac/ios/RootViewController.mm\n             proj.ios_mac/ios/Prefix.pch\n             ${APP_UI_RES}\n             )\n    elseif(MACOSX)\n        set(APP_UI_RES\n            proj.ios_mac/mac/Icon.icns\n            proj.ios_mac/mac/Info.plist\n            )\n        list(APPEND GAME_SOURCE\n             proj.ios_mac/mac/main.cpp\n             proj.ios_mac/mac/Prefix.pch\n             ${APP_UI_RES}\n             )\n    endif()\n    list(APPEND GAME_SOURCE ${common_res_files})\nendif()\n\n# mark app complie info and libs info\nset(all_code_files\n    ${GAME_HEADER}\n    ${GAME_SOURCE}\n    )\nif(NOT ANDROID)\n    add_executable(${APP_NAME} ${all_code_files})\nelse()\n    add_library(${APP_NAME} SHARED ${all_code_files})\n    add_subdirectory(${COCOS2DX_ROOT_PATH}/cocos/platform/android ${ENGINE_BINARY_PATH}/cocos/platform)\n    target_link_libraries(${APP_NAME} -Wl,--whole-archive cpp_android_spec -Wl,--no-whole-archive)\nendif()\n\ntarget_link_libraries(${APP_NAME} cocos2d)\ntarget_include_directories(${APP_NAME}\n        PRIVATE Classes\n        PRIVATE ${COCOS2DX_ROOT_PATH}/cocos/audio/include/\n)\n\n# mark app resources\nsetup_cocos_app_config(${APP_NAME})\n# PluginSdkboxPlay\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginSdkboxPlay/)\n    target_link_libraries(${APP_NAME} ext_PluginSdkboxPlay)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework AVFoundation\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreGraphics\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMedia\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreTelephony\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework EventKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework EventKitUI\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MessageUI\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework StoreKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameController\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MediaPlayer\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -ObjC\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginSdkboxPlay\")\n    endif()\nendif()\n# PluginFacebook\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginFacebook/)\n    target_link_libraries(${APP_NAME} ext_PluginFacebook)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework FBSDKCoreKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework FBSDKLoginKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework FBSDKShareKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Bolts\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Security\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework AdSupport\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MediaPlayer\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameController\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework WebKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Accelerate\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -ObjC\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginFacebook\")\n    endif()\nendif()\n# PluginShare\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginShare/)\n    target_link_libraries(${APP_NAME} ext_PluginShare)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework TwitterCore\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework TwitterKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Accounts\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreText\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMedia\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreData\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Social\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameController\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MediaPlayer\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MessageUI\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMotion\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SafariServices\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -ObjC\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginShare\")\n    endif()\nendif()\n# PluginIAP\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginIAP/)\n    target_link_libraries(${APP_NAME} ext_PluginIAP)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Security\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework StoreKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginIAP\")\n    endif()\nendif()\n# sdkbox\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/sdkbox/)\n    target_link_libraries(${APP_NAME} ext_sdkbox)\nelseif(APPLE)\n    if(IOS)\n        set_target_properties(${APP_NAME}\n            PROPERTIES\n            XCODE_ATTRIBUTE_FRAMEWORK_SEARCH_PATHS \"\\$(inherited) ${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac\"\n        )\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework sdkbox\")\n    endif()\nendif()\nif(APPLE)\n    set_target_properties(${APP_NAME} PROPERTIES RESOURCE \"${APP_UI_RES}\")\n    if(MACOSX)\n        set_target_properties(${APP_NAME} PROPERTIES\n                              MACOSX_BUNDLE_INFO_PLIST \"${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac/mac/Info.plist\"\n                              )\n    elseif(IOS)\n        cocos_pak_xcode(${APP_NAME} INFO_PLIST \"iOSBundleInfo.plist.in\")\n        set_xcode_property(${APP_NAME} ASSETCATALOG_COMPILER_APPICON_NAME \"AppIcon\")\n        set_xcode_property(${APP_NAME} DEVELOPMENT_TEAM \"\")\n        set_xcode_property(${APP_NAME} CODE_SIGN_IDENTITY \"iPhone Developer\")\n    endif()\nelseif(WINDOWS)\n    cocos_copy_target_dll(${APP_NAME})\nendif()\n\nif(LINUX OR WINDOWS)\n    set(APP_RES_DIR \"$<TARGET_FILE_DIR:${APP_NAME}>/Resources\")\n    cocos_copy_target_res(${APP_NAME} COPY_TO ${APP_RES_DIR} FOLDERS ${GAME_RES_FOLDER})\nendif()\n", 
            "COCOS_PROJECT_HINT": "./", 
            "ANDROID_STUDIO_PROPERTIES": "proj.android/app/project.properties", 
            "VS_PROJECT_PROJ_FILE": "n/a", 
            "check_str": "com.google.android.gms:play-services-base", 
            "COCOS_ENGINE_TYPE": "unknown", 
            "ANDROID_PROJECT_DIR": "n/a", 
            "ANDROID_COCOS_SRC_DIR": "proj.android/app/src/org/cocos2dx/lib/", 
            "COCOS_CLASSES_DIR": "Classes/", 
            "XCODE_PROJECT": "proj.ios_mac/SuperSwitchRun.xcodeproj/project.pbxproj", 
            "COCOS_ENGINE_MAKER": "cocos2d-x", 
            "ANDROID_STUDIO_ACTIVITY_PATH": "proj.android/app/src/org/cocos2dx/cpp/", 
            "ANDROID_SDK_DIR": "n/a", 
            "COCOS_2DX_ROOT": "unknown", 
            "ANDROID_MANIFEST": "n/a", 
            "ANDROID_STUDIO_MANIFEST": "proj.android/app/AndroidManifest.xml", 
            "ANDROID_JNI_DIR": "n/a", 
            "IOS_PROJECT_DIR": "proj.ios_mac/", 
            "XCODE_PROJECT_CXX_LIBRARY": "libc++", 
            "ANDROID_STUDIO_MK": "proj.android/app/jni/Android.mk", 
            "XCODE_PROJECT_DIR": "proj.ios_mac/SuperSwitchRun.xcodeproj/", 
            "name": "PluginSdkboxAds", 
            "ANDROID_MK_USES_WILDCARDS": "n/a", 
            "cmake_file": "CMakeLists.txt", 
            "COCOS_BACKUP_DIR": "backup-2020-06-11/", 
            "ANDROID_PROPERTIES": "n/a", 
            "file_path": "proj.android/app/libs/support-v4-18.0.0.jar/", 
            "COCOS_RESOURCES_DIR": "Resources/", 
            "ANDROID_STUDIO_LIBS_DIR": "proj.android/app/libs/", 
            "SDKBOX_PLUGIN_NAME": "SdkboxAds", 
            "ANDROID_LIBS_DIR": "proj.android/app/libs/", 
            "ANDROID_MK": "n/a", 
            "APPLICATION_MK": "n/a"
        }
    }, 
    "share": {
        "engine": "3", 
        "name": "share", 
        "args": {
            "patcherrors": 0, 
            "project": "./", 
            "noupdate": 0, 
            "days": 10, 
            "remote": 1, 
            "verbose": 0, 
            "forcecopy": 0, 
            "nohelp": 0, 
            "server": "download.sdkbox.com/installer/v1/", 
            "forcedownload": 0, 
            "nopatchingcpp": 0, 
            "command": "import", 
            "alwaysupdate": 0, 
            "installer": "", 
            "manifest": "manifest.json", 
            "local": 0, 
            "nopatching": 0, 
            "jsonapi": 0
        }, 
        "version": [
            2, 
            6, 
            0, 
            1
        ], 
        "result": "ok", 
        "message": "success", 
        "constants": {
            "mlines": [
                "# ShareResBundle", 
                "if(IOS)", 
                "    set(ShareResBundle0 \"${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac/TwitterKit.framework/TwitterKitResources.bundle\")", 
                "    list(APPEND common_res_files ${ShareResBundle0})", 
                "    set_source_files_properties(${ShareResBundle0} PROPERTIES MACOSX_PACKAGE_LOCATION Resources)", 
                "endif()"
            ], 
            "code": "dependencies { compile 'com.twitter.sdk.android:tweet-composer:3.1.1' }\n", 
            "ANDROID_STUDIO_JNI_DIR": "proj.android/app/jni/", 
            "lib_project": "proj.android/app/libs/twitter-core/", 
            "COCOS_PROJECT_DIR": "./", 
            "VS_PROJECT_DIR": "n/a", 
            "COCOS_2DX_INSTALLATION_VERSION": "unknown", 
            "proguard_rules": "proj.android/app/proguard-rules.pro", 
            "twitter_bundle_path": "proj.ios_mac/TwitterKit.framework/TwitterKitResources.bundle/", 
            "ANDROID_COCOS_PACKAGE_ROOT": "proj.android/app/", 
            "android_jars": [
                "okio-1.9.0.jar", 
                "converter-gson-2.1.0.jar", 
                "picasso-2.5.2.jar", 
                "gson-2.7.jar", 
                "retrofit-2.1.0.jar", 
                "twitter-text-1.14.3.jar", 
                "okhttp-3.4.2.jar"
            ], 
            "COCOS_2DX_VERSION": "3.17.2", 
            "source_dir": "${CMAKE_CURRENT_SOURCE_DIR}", 
            "flag_line": "setup_cocos_app_config(${APP_NAME})", 
            "marr3": [
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginShare\")", 
                "    endif()", 
                "endif()"
            ], 
            "marr2": [
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework TwitterCore\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework TwitterKit\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Accounts\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreText\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMedia\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreData\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Social\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameController\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MediaPlayer\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MessageUI\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMotion\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SafariServices\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -ObjC\")"
            ], 
            "marr1": [
                "# PluginShare", 
                "if(ANDROID)", 
                "    add_definitions(-DSDKBOX_ENABLED)", 
                "    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginShare/)", 
                "    target_link_libraries(${APP_NAME} ext_PluginShare)", 
                "elseif(APPLE)", 
                "    if(IOS)"
            ], 
            "val": "proj.ios_mac/TwitterKit.framework/TwitterKitResources.bundle", 
            "ANDROID_STUDIO_ACTIVITY_NAME": "AppActivity", 
            "CCC_ENGINE_VERSION": "3.17.2", 
            "XCODE_PROJECT_PREPROCESSOR": "", 
            "proguard_file": "n/proguard-project.txt", 
            "ANDROID_STUDIO_PROJECT_DIR": "proj.android/", 
            "VS_PROJECT_SLN_FILE": "n/a", 
            "content": "#/****************************************************************************\n# Copyright (c) 2013-2014 cocos2d-x.org\n# Copyright (c) 2015-2017 Chukong Technologies Inc.\n#\n# http://www.cocos2d-x.org\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE.\n# ****************************************************************************/\n\ncmake_minimum_required(VERSION 3.6)\n\nset(APP_NAME SuperSwitchRun)\n\nproject(${APP_NAME})\n\nset(COCOS2DX_ROOT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cocos2d)\nset(CMAKE_MODULE_PATH ${COCOS2DX_ROOT_PATH}/cmake/Modules/)\n\ninclude(CocosBuildSet)\nadd_subdirectory(${COCOS2DX_ROOT_PATH}/cocos ${ENGINE_BINARY_PATH}/cocos/core)\n\n# record sources, headers, resources...\nset(GAME_SOURCE)\nset(GAME_HEADER)\n\nset(GAME_RES_FOLDER\n    \"${CMAKE_CURRENT_SOURCE_DIR}/Resources\"\n    )\nif(APPLE OR WINDOWS)\n    cocos_mark_multi_resources(common_res_files RES_TO \"Resources\" FOLDERS ${GAME_RES_FOLDER})\nendif()\n\n# add cross-platforms source files and header files \nlist(APPEND GAME_SOURCE\n     Classes/AppDelegate.cpp\n     Classes/HelloWorldScene.cpp\n     )\nlist(APPEND GAME_HEADER\n     Classes/AppDelegate.h\n     Classes/HelloWorldScene.h\n     )\n\nif(ANDROID)\n    # change APP_NAME to the share library name for Android, it's value depend on AndroidManifest.xml\n    set(APP_NAME MyGame)\n    list(APPEND GAME_SOURCE\n         proj.android/app/jni/hellocpp/main.cpp\n         )\nelseif(LINUX)\n    list(APPEND GAME_SOURCE\n         proj.linux/main.cpp\n         )\nelseif(WINDOWS)\n    list(APPEND GAME_HEADER\n         proj.win32/main.h\n         proj.win32/resource.h\n         )\n    list(APPEND GAME_SOURCE\n         proj.win32/main.cpp\n         proj.win32/game.rc\n         ${common_res_files}\n         )\nelseif(APPLE)\n    if(IOS)\n        list(APPEND GAME_HEADER\n             proj.ios_mac/ios/AppController.h\n             proj.ios_mac/ios/RootViewController.h\n             )\n        set(APP_UI_RES\n            proj.ios_mac/ios/LaunchScreen.storyboard\n            proj.ios_mac/ios/LaunchScreenBackground.png\n            proj.ios_mac/ios/Images.xcassets\n            )\n        list(APPEND GAME_SOURCE\n             proj.ios_mac/ios/main.m\n             proj.ios_mac/ios/AppController.mm\n             proj.ios_mac/ios/RootViewController.mm\n             proj.ios_mac/ios/Prefix.pch\n             ${APP_UI_RES}\n             )\n    elseif(MACOSX)\n        set(APP_UI_RES\n            proj.ios_mac/mac/Icon.icns\n            proj.ios_mac/mac/Info.plist\n            )\n        list(APPEND GAME_SOURCE\n             proj.ios_mac/mac/main.cpp\n             proj.ios_mac/mac/Prefix.pch\n             ${APP_UI_RES}\n             )\n    endif()\n    list(APPEND GAME_SOURCE ${common_res_files})\nendif()\n\n# mark app complie info and libs info\nset(all_code_files\n    ${GAME_HEADER}\n    ${GAME_SOURCE}\n    )\nif(NOT ANDROID)\n    add_executable(${APP_NAME} ${all_code_files})\nelse()\n    add_library(${APP_NAME} SHARED ${all_code_files})\n    add_subdirectory(${COCOS2DX_ROOT_PATH}/cocos/platform/android ${ENGINE_BINARY_PATH}/cocos/platform)\n    target_link_libraries(${APP_NAME} -Wl,--whole-archive cpp_android_spec -Wl,--no-whole-archive)\nendif()\n\ntarget_link_libraries(${APP_NAME} cocos2d)\ntarget_include_directories(${APP_NAME}\n        PRIVATE Classes\n        PRIVATE ${COCOS2DX_ROOT_PATH}/cocos/audio/include/\n)\n\n# mark app resources\nsetup_cocos_app_config(${APP_NAME})\n# PluginIAP\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginIAP/)\n    target_link_libraries(${APP_NAME} ext_PluginIAP)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Security\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework StoreKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginIAP\")\n    endif()\nendif()\n# sdkbox\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/sdkbox/)\n    target_link_libraries(${APP_NAME} ext_sdkbox)\nelseif(APPLE)\n    if(IOS)\n        set_target_properties(${APP_NAME}\n            PROPERTIES\n            XCODE_ATTRIBUTE_FRAMEWORK_SEARCH_PATHS \"\\$(inherited) ${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac\"\n        )\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework sdkbox\")\n    endif()\nendif()\nif(APPLE)\n    set_target_properties(${APP_NAME} PROPERTIES RESOURCE \"${APP_UI_RES}\")\n    if(MACOSX)\n        set_target_properties(${APP_NAME} PROPERTIES\n                              MACOSX_BUNDLE_INFO_PLIST \"${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac/mac/Info.plist\"\n                              )\n    elseif(IOS)\n        cocos_pak_xcode(${APP_NAME} INFO_PLIST \"iOSBundleInfo.plist.in\")\n        set_xcode_property(${APP_NAME} ASSETCATALOG_COMPILER_APPICON_NAME \"AppIcon\")\n        set_xcode_property(${APP_NAME} DEVELOPMENT_TEAM \"\")\n        set_xcode_property(${APP_NAME} CODE_SIGN_IDENTITY \"iPhone Developer\")\n    endif()\nelseif(WINDOWS)\n    cocos_copy_target_dll(${APP_NAME})\nendif()\n\nif(LINUX OR WINDOWS)\n    set(APP_RES_DIR \"$<TARGET_FILE_DIR:${APP_NAME}>/Resources\")\n    cocos_copy_target_res(${APP_NAME} COPY_TO ${APP_RES_DIR} FOLDERS ${GAME_RES_FOLDER})\nendif()\n", 
            "COCOS_PROJECT_HINT": "./", 
            "var_name": "ShareResBundle0", 
            "ANDROID_STUDIO_PROPERTIES": "proj.android/app/project.properties", 
            "VS_PROJECT_PROJ_FILE": "n/a", 
            "check_str": "com.twitter.sdk.android:tweet-composer", 
            "COCOS_ENGINE_TYPE": "unknown", 
            "ANDROID_PROJECT_DIR": "n/a", 
            "ANDROID_COCOS_SRC_DIR": "proj.android/app/src/org/cocos2dx/lib/", 
            "COCOS_CLASSES_DIR": "Classes/", 
            "XCODE_PROJECT": "proj.ios_mac/SuperSwitchRun.xcodeproj/project.pbxproj", 
            "COCOS_ENGINE_MAKER": "cocos2d-x", 
            "ANDROID_STUDIO_ACTIVITY_PATH": "proj.android/app/src/org/cocos2dx/cpp/", 
            "fw": "-ObjC", 
            "ANDROID_SDK_DIR": "n/a", 
            "COCOS_2DX_ROOT": "unknown", 
            "ANDROID_MANIFEST": "n/a", 
            "lib_folder_path": "proj.android/app/libs/twittercore/", 
            "ANDROID_STUDIO_MANIFEST": "proj.android/app/AndroidManifest.xml", 
            "ANDROID_JNI_DIR": "n/a", 
            "IOS_PROJECT_DIR": "proj.ios_mac/", 
            "XCODE_PROJECT_CXX_LIBRARY": "libc++", 
            "ANDROID_STUDIO_MK": "proj.android/app/jni/Android.mk", 
            "XCODE_PROJECT_DIR": "proj.ios_mac/SuperSwitchRun.xcodeproj/", 
            "name": "PluginShare", 
            "idx": 0, 
            "ANDROID_MK_USES_WILDCARDS": "n/a", 
            "cmake_file": "CMakeLists.txt", 
            "COCOS_BACKUP_DIR": "backup-2020-06-11/", 
            "ANDROID_PROPERTIES": "n/a", 
            "SDKBOX_PACKAGE_NAME": "share", 
            "COCOS_RESOURCES_DIR": "Resources/", 
            "ANDROID_STUDIO_LIBS_DIR": "proj.android/app/libs/", 
            "SDKBOX_PLUGIN_NAME": "Share", 
            "ANDROID_LIBS_DIR": "proj.android/app/libs/", 
            "ANDROID_MK": "n/a", 
            "APPLICATION_MK": "n/a"
        }
    }, 
    "googleplayservices": {
        "engine": "3", 
        "name": "googleplayservices", 
        "args": {
            "patcherrors": 0, 
            "project": "./", 
            "noupdate": 0, 
            "nopatchingcpp": 0, 
            "remote": 1, 
            "verbose": 0, 
            "forcecopy": 0, 
            "nohelp": 0, 
            "days": 10, 
            "server": "download.sdkbox.com/installer/v1/", 
            "forcedownload": 0, 
            "command": "import", 
            "alwaysupdate": 0, 
            "installer": "", 
            "manifest": "manifest.json", 
            "local": 0, 
            "nopatching": 1, 
            "jsonapi": 0
        }, 
        "version": [
            2, 
            6, 
            0, 
            1
        ], 
        "result": "ok", 
        "message": "success", 
        "constants": {
            "code": "dependencies { compile 'com.google.android.gms:play-services-base:16.1.0' }\n", 
            "ANDROID_STUDIO_JNI_DIR": "proj.android/app/jni/", 
            "COCOS_2DX_VERSION": "3.17.2", 
            "COCOS_PROJECT_DIR": "./", 
            "VS_PROJECT_DIR": "n/a", 
            "COCOS_2DX_INSTALLATION_VERSION": "unknown", 
            "ANDROID_COCOS_PACKAGE_ROOT": "proj.android/app/", 
            "ANDROID_STUDIO_ACTIVITY_NAME": "AppActivity", 
            "CCC_ENGINE_VERSION": "3.17.2", 
            "XCODE_PROJECT_PREPROCESSOR": "", 
            "ANDROID_STUDIO_PROJECT_DIR": "proj.android/", 
            "VS_PROJECT_SLN_FILE": "n/a", 
            "COCOS_PROJECT_HINT": "./", 
            "ANDROID_STUDIO_PROPERTIES": "proj.android/app/project.properties", 
            "VS_PROJECT_PROJ_FILE": "n/a", 
            "check_str": "com.google.android.gms:play-services-base", 
            "COCOS_ENGINE_TYPE": "unknown", 
            "ANDROID_PROJECT_DIR": "n/a", 
            "ANDROID_COCOS_SRC_DIR": "proj.android/app/src/org/cocos2dx/lib/", 
            "COCOS_CLASSES_DIR": "Classes/", 
            "XCODE_PROJECT": "proj.ios_mac/SuperSwitchRun.xcodeproj/project.pbxproj", 
            "COCOS_ENGINE_MAKER": "cocos2d-x", 
            "ANDROID_STUDIO_ACTIVITY_PATH": "proj.android/app/src/org/cocos2dx/cpp/", 
            "ANDROID_SDK_DIR": "n/a", 
            "COCOS_2DX_ROOT": "unknown", 
            "ANDROID_MANIFEST": "n/a", 
            "ANDROID_STUDIO_MANIFEST": "proj.android/app/AndroidManifest.xml", 
            "ANDROID_JNI_DIR": "n/a", 
            "IOS_PROJECT_DIR": "proj.ios_mac/", 
            "XCODE_PROJECT_CXX_LIBRARY": "libc++", 
            "ANDROID_STUDIO_MK": "proj.android/app/jni/Android.mk", 
            "XCODE_PROJECT_DIR": "proj.ios_mac/SuperSwitchRun.xcodeproj/", 
            "ANDROID_MK_USES_WILDCARDS": "n/a", 
            "COCOS_BACKUP_DIR": "backup-2020-06-11/", 
            "ANDROID_PROPERTIES": "n/a", 
            "COCOS_RESOURCES_DIR": "Resources/", 
            "ANDROID_STUDIO_LIBS_DIR": "proj.android/app/libs/", 
            "ANDROID_LIBS_DIR": "proj.android/app/libs/", 
            "ANDROID_MK": "n/a", 
            "APPLICATION_MK": "n/a"
        }
    }, 
    "admob": {
        "engine": "3", 
        "name": "admob", 
        "args": {
            "patcherrors": 0, 
            "project": "./", 
            "noupdate": 0, 
            "nopatchingcpp": 0, 
            "remote": 1, 
            "verbose": 0, 
            "forcecopy": 0, 
            "nohelp": 0, 
            "days": 10, 
            "server": "download.sdkbox.com/installer/v1/", 
            "forcedownload": 0, 
            "command": "import", 
            "alwaysupdate": 0, 
            "installer": "", 
            "manifest": "manifest.json", 
            "local": 0, 
            "nopatching": 0, 
            "jsonapi": 0
        }, 
        "version": [
            2, 
            6, 
            0, 
            1
        ], 
        "result": "ok", 
        "message": "success", 
        "constants": {
            "code": "dependencies { compile 'com.google.android.gms:play-services-ads:15.0.1' }\n", 
            "ANDROID_STUDIO_JNI_DIR": "proj.android/app/jni/", 
            "COCOS_2DX_VERSION": "3.17.2", 
            "COCOS_PROJECT_DIR": "./", 
            "VS_PROJECT_DIR": "n/a", 
            "COCOS_2DX_INSTALLATION_VERSION": "unknown", 
            "proguard_rules": "proj.android/app/proguard-rules.pro", 
            "ANDROID_COCOS_PACKAGE_ROOT": "proj.android/app/", 
            "source_dir": "${CMAKE_CURRENT_SOURCE_DIR}", 
            "flag_line": "setup_cocos_app_config(${APP_NAME})", 
            "marr3": [
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginAdMob\")", 
                "    endif()", 
                "endif()"
            ], 
            "marr2": [
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GoogleMobileAds\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GoogleAppMeasurement\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GoogleUtilities\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework nanopb\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMotion\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework AdSupport\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework AudioToolbox\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework AVFoundation\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreGraphics\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMedia\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreTelephony\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework EventKit\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework EventKitUI\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MessageUI\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework StoreKit\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameController\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MediaPlayer\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GLKit\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreVideo\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreBluetooth\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SafariServices\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MobileCoreServices\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CFNetwork\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework WebKit\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework JavaScriptCore\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -ObjC\")"
            ], 
            "marr1": [
                "# PluginAdMob", 
                "if(ANDROID)", 
                "    add_definitions(-DSDKBOX_ENABLED)", 
                "    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginAdMob/)", 
                "    target_link_libraries(${APP_NAME} ext_PluginAdMob)", 
                "elseif(APPLE)", 
                "    if(IOS)"
            ], 
            "ANDROID_STUDIO_ACTIVITY_NAME": "AppActivity", 
            "CCC_ENGINE_VERSION": "3.17.2", 
            "XCODE_PROJECT_PREPROCESSOR": "", 
            "proguard_file": "n/proguard-project.txt", 
            "ANDROID_STUDIO_PROJECT_DIR": "proj.android/", 
            "VS_PROJECT_SLN_FILE": "n/a", 
            "content": "#/****************************************************************************\n# Copyright (c) 2013-2014 cocos2d-x.org\n# Copyright (c) 2015-2017 Chukong Technologies Inc.\n#\n# http://www.cocos2d-x.org\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE.\n# ****************************************************************************/\n\ncmake_minimum_required(VERSION 3.6)\n\nset(APP_NAME SuperSwitchRun)\n\nproject(${APP_NAME})\n\nset(COCOS2DX_ROOT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cocos2d)\nset(CMAKE_MODULE_PATH ${COCOS2DX_ROOT_PATH}/cmake/Modules/)\n\ninclude(CocosBuildSet)\nadd_subdirectory(${COCOS2DX_ROOT_PATH}/cocos ${ENGINE_BINARY_PATH}/cocos/core)\n\n# record sources, headers, resources...\nset(GAME_SOURCE)\nset(GAME_HEADER)\n\nset(GAME_RES_FOLDER\n    \"${CMAKE_CURRENT_SOURCE_DIR}/Resources\"\n    )\nif(APPLE OR WINDOWS)\n    cocos_mark_multi_resources(common_res_files RES_TO \"Resources\" FOLDERS ${GAME_RES_FOLDER})\n# ShareResBundle\n    if(IOS)\n        set(ShareResBundle0 \"${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac/TwitterKit.framework/TwitterKitResources.bundle\")\n        list(APPEND common_res_files ${ShareResBundle0})\n        set_source_files_properties(${ShareResBundle0} PROPERTIES MACOSX_PACKAGE_LOCATION Resources)\n    endif()\nendif()\n\n# add cross-platforms source files and header files \nlist(APPEND GAME_SOURCE\n     Classes/AppDelegate.cpp\n     Classes/HelloWorldScene.cpp\n     )\nlist(APPEND GAME_HEADER\n     Classes/AppDelegate.h\n     Classes/HelloWorldScene.h\n     )\n\nif(ANDROID)\n    # change APP_NAME to the share library name for Android, it's value depend on AndroidManifest.xml\n    set(APP_NAME MyGame)\n    list(APPEND GAME_SOURCE\n         proj.android/app/jni/hellocpp/main.cpp\n         )\nelseif(LINUX)\n    list(APPEND GAME_SOURCE\n         proj.linux/main.cpp\n         )\nelseif(WINDOWS)\n    list(APPEND GAME_HEADER\n         proj.win32/main.h\n         proj.win32/resource.h\n         )\n    list(APPEND GAME_SOURCE\n         proj.win32/main.cpp\n         proj.win32/game.rc\n         ${common_res_files}\n         )\nelseif(APPLE)\n    if(IOS)\n        list(APPEND GAME_HEADER\n             proj.ios_mac/ios/AppController.h\n             proj.ios_mac/ios/RootViewController.h\n             )\n        set(APP_UI_RES\n            proj.ios_mac/ios/LaunchScreen.storyboard\n            proj.ios_mac/ios/LaunchScreenBackground.png\n            proj.ios_mac/ios/Images.xcassets\n            )\n        list(APPEND GAME_SOURCE\n             proj.ios_mac/ios/main.m\n             proj.ios_mac/ios/AppController.mm\n             proj.ios_mac/ios/RootViewController.mm\n             proj.ios_mac/ios/Prefix.pch\n             ${APP_UI_RES}\n             )\n    elseif(MACOSX)\n        set(APP_UI_RES\n            proj.ios_mac/mac/Icon.icns\n            proj.ios_mac/mac/Info.plist\n            )\n        list(APPEND GAME_SOURCE\n             proj.ios_mac/mac/main.cpp\n             proj.ios_mac/mac/Prefix.pch\n             ${APP_UI_RES}\n             )\n    endif()\n    list(APPEND GAME_SOURCE ${common_res_files})\nendif()\n\n# mark app complie info and libs info\nset(all_code_files\n    ${GAME_HEADER}\n    ${GAME_SOURCE}\n    )\nif(NOT ANDROID)\n    add_executable(${APP_NAME} ${all_code_files})\nelse()\n    add_library(${APP_NAME} SHARED ${all_code_files})\n    add_subdirectory(${COCOS2DX_ROOT_PATH}/cocos/platform/android ${ENGINE_BINARY_PATH}/cocos/platform)\n    target_link_libraries(${APP_NAME} -Wl,--whole-archive cpp_android_spec -Wl,--no-whole-archive)\nendif()\n\ntarget_link_libraries(${APP_NAME} cocos2d)\ntarget_include_directories(${APP_NAME}\n        PRIVATE Classes\n        PRIVATE ${COCOS2DX_ROOT_PATH}/cocos/audio/include/\n)\n\n# mark app resources\nsetup_cocos_app_config(${APP_NAME})\n# PluginSdkboxAds\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginSdkboxAds/)\n    target_link_libraries(${APP_NAME} ext_PluginSdkboxAds)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginSdkboxAds\")\n    endif()\nendif()\n# PluginSdkboxPlay\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginSdkboxPlay/)\n    target_link_libraries(${APP_NAME} ext_PluginSdkboxPlay)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework AVFoundation\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreGraphics\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMedia\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreTelephony\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework EventKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework EventKitUI\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MessageUI\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework StoreKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameController\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MediaPlayer\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -ObjC\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginSdkboxPlay\")\n    endif()\nendif()\n# PluginFacebook\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginFacebook/)\n    target_link_libraries(${APP_NAME} ext_PluginFacebook)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework FBSDKCoreKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework FBSDKLoginKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework FBSDKShareKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Bolts\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Security\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework AdSupport\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MediaPlayer\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameController\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework WebKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Accelerate\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -ObjC\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginFacebook\")\n    endif()\nendif()\n# PluginShare\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginShare/)\n    target_link_libraries(${APP_NAME} ext_PluginShare)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework TwitterCore\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework TwitterKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Accounts\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreText\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMedia\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreData\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Social\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameController\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MediaPlayer\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MessageUI\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMotion\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SafariServices\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -ObjC\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginShare\")\n    endif()\nendif()\n# PluginIAP\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginIAP/)\n    target_link_libraries(${APP_NAME} ext_PluginIAP)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Security\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework StoreKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginIAP\")\n    endif()\nendif()\n# sdkbox\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/sdkbox/)\n    target_link_libraries(${APP_NAME} ext_sdkbox)\nelseif(APPLE)\n    if(IOS)\n        set_target_properties(${APP_NAME}\n            PROPERTIES\n            XCODE_ATTRIBUTE_FRAMEWORK_SEARCH_PATHS \"\\$(inherited) ${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac\"\n        )\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework sdkbox\")\n    endif()\nendif()\nif(APPLE)\n    set_target_properties(${APP_NAME} PROPERTIES RESOURCE \"${APP_UI_RES}\")\n    if(MACOSX)\n        set_target_properties(${APP_NAME} PROPERTIES\n                              MACOSX_BUNDLE_INFO_PLIST \"${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac/mac/Info.plist\"\n                              )\n    elseif(IOS)\n        cocos_pak_xcode(${APP_NAME} INFO_PLIST \"iOSBundleInfo.plist.in\")\n        set_xcode_property(${APP_NAME} ASSETCATALOG_COMPILER_APPICON_NAME \"AppIcon\")\n        set_xcode_property(${APP_NAME} DEVELOPMENT_TEAM \"\")\n        set_xcode_property(${APP_NAME} CODE_SIGN_IDENTITY \"iPhone Developer\")\n    endif()\nelseif(WINDOWS)\n    cocos_copy_target_dll(${APP_NAME})\nendif()\n\nif(LINUX OR WINDOWS)\n    set(APP_RES_DIR \"$<TARGET_FILE_DIR:${APP_NAME}>/Resources\")\n    cocos_copy_target_res(${APP_NAME} COPY_TO ${APP_RES_DIR} FOLDERS ${GAME_RES_FOLDER})\nendif()\n", 
            "COCOS_PROJECT_HINT": "./", 
            "ANDROID_STUDIO_PROPERTIES": "proj.android/app/project.properties", 
            "VS_PROJECT_PROJ_FILE": "n/a", 
            "check_str": "com.google.android.gms:play-services-ads", 
            "COCOS_ENGINE_TYPE": "unknown", 
            "ANDROID_PROJECT_DIR": "n/a", 
            "ANDROID_COCOS_SRC_DIR": "proj.android/app/src/org/cocos2dx/lib/", 
            "COCOS_CLASSES_DIR": "Classes/", 
            "XCODE_PROJECT": "proj.ios_mac/SuperSwitchRun.xcodeproj/project.pbxproj", 
            "COCOS_ENGINE_MAKER": "cocos2d-x", 
            "ANDROID_STUDIO_ACTIVITY_PATH": "proj.android/app/src/org/cocos2dx/cpp/", 
            "ANDROID_SDK_DIR": "n/a", 
            "COCOS_2DX_ROOT": "unknown", 
            "ANDROID_MANIFEST": "n/a", 
            "ANDROID_STUDIO_MANIFEST": "proj.android/app/AndroidManifest.xml", 
            "ANDROID_JNI_DIR": "n/a", 
            "IOS_PROJECT_DIR": "proj.ios_mac/", 
            "XCODE_PROJECT_CXX_LIBRARY": "libc++", 
            "ANDROID_STUDIO_MK": "proj.android/app/jni/Android.mk", 
            "XCODE_PROJECT_DIR": "proj.ios_mac/SuperSwitchRun.xcodeproj/", 
            "name": "PluginAdMob", 
            "fw": "-ObjC", 
            "ANDROID_MK_USES_WILDCARDS": "n/a", 
            "cmake_file": "CMakeLists.txt", 
            "COCOS_BACKUP_DIR": "backup-2020-06-11/", 
            "ANDROID_PROPERTIES": "n/a", 
            "file_path": "proj.android/app/libs/support-v4-18.0.0.jar/", 
            "SDKBOX_PACKAGE_NAME": "admob", 
            "COCOS_RESOURCES_DIR": "Resources/", 
            "ANDROID_STUDIO_LIBS_DIR": "proj.android/app/libs/", 
            "SDKBOX_PLUGIN_NAME": "AdMob", 
            "ANDROID_LIBS_DIR": "proj.android/app/libs/", 
            "ANDROID_MK": "n/a", 
            "APPLICATION_MK": "n/a"
        }
    }, 
    "sdkboxplay": {
        "engine": "3", 
        "name": "sdkboxplay", 
        "args": {
            "patcherrors": 0, 
            "project": "./", 
            "noupdate": 0, 
            "days": 10, 
            "remote": 1, 
            "verbose": 0, 
            "forcecopy": 0, 
            "nohelp": 0, 
            "server": "download.sdkbox.com/installer/v1/", 
            "forcedownload": 0, 
            "nopatchingcpp": 0, 
            "command": "import", 
            "alwaysupdate": 0, 
            "installer": "", 
            "manifest": "manifest.json", 
            "local": 0, 
            "nopatching": 0, 
            "jsonapi": 0
        }, 
        "version": [
            2, 
            6, 
            0, 
            1
        ], 
        "result": "ok", 
        "message": "success", 
        "constants": {
            "code": "dependencies { compile 'com.google.android.gms:play-services-drive:17.0.0' }\n", 
            "ANDROID_STUDIO_JNI_DIR": "proj.android/app/jni/", 
            "COCOS_2DX_VERSION": "3.17.2", 
            "COCOS_PROJECT_DIR": "./", 
            "VS_PROJECT_DIR": "n/a", 
            "COCOS_2DX_INSTALLATION_VERSION": "unknown", 
            "proguard_rules": "proj.android/app/proguard-rules.pro", 
            "ANDROID_COCOS_PACKAGE_ROOT": "proj.android/app/", 
            "source_dir": "${CMAKE_CURRENT_SOURCE_DIR}", 
            "flag_line": "setup_cocos_app_config(${APP_NAME})", 
            "marr3": [
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginSdkboxPlay\")", 
                "    endif()", 
                "endif()"
            ], 
            "marr2": [
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework AVFoundation\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreGraphics\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMedia\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreTelephony\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework EventKit\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework EventKitUI\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MessageUI\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework StoreKit\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameController\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MediaPlayer\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameKit\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -ObjC\")"
            ], 
            "marr1": [
                "# PluginSdkboxPlay", 
                "if(ANDROID)", 
                "    add_definitions(-DSDKBOX_ENABLED)", 
                "    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginSdkboxPlay/)", 
                "    target_link_libraries(${APP_NAME} ext_PluginSdkboxPlay)", 
                "elseif(APPLE)", 
                "    if(IOS)"
            ], 
            "ANDROID_STUDIO_ACTIVITY_NAME": "AppActivity", 
            "CCC_ENGINE_VERSION": "3.17.2", 
            "XCODE_PROJECT_PREPROCESSOR": "", 
            "proguard_file": "n/proguard-project.txt", 
            "ANDROID_STUDIO_PROJECT_DIR": "proj.android/", 
            "VS_PROJECT_SLN_FILE": "n/a", 
            "content": "#/****************************************************************************\n# Copyright (c) 2013-2014 cocos2d-x.org\n# Copyright (c) 2015-2017 Chukong Technologies Inc.\n#\n# http://www.cocos2d-x.org\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE.\n# ****************************************************************************/\n\ncmake_minimum_required(VERSION 3.6)\n\nset(APP_NAME SuperSwitchRun)\n\nproject(${APP_NAME})\n\nset(COCOS2DX_ROOT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cocos2d)\nset(CMAKE_MODULE_PATH ${COCOS2DX_ROOT_PATH}/cmake/Modules/)\n\ninclude(CocosBuildSet)\nadd_subdirectory(${COCOS2DX_ROOT_PATH}/cocos ${ENGINE_BINARY_PATH}/cocos/core)\n\n# record sources, headers, resources...\nset(GAME_SOURCE)\nset(GAME_HEADER)\n\nset(GAME_RES_FOLDER\n    \"${CMAKE_CURRENT_SOURCE_DIR}/Resources\"\n    )\nif(APPLE OR WINDOWS)\n    cocos_mark_multi_resources(common_res_files RES_TO \"Resources\" FOLDERS ${GAME_RES_FOLDER})\n# ShareResBundle\n    if(IOS)\n        set(ShareResBundle0 \"${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac/TwitterKit.framework/TwitterKitResources.bundle\")\n        list(APPEND common_res_files ${ShareResBundle0})\n        set_source_files_properties(${ShareResBundle0} PROPERTIES MACOSX_PACKAGE_LOCATION Resources)\n    endif()\nendif()\n\n# add cross-platforms source files and header files \nlist(APPEND GAME_SOURCE\n     Classes/AppDelegate.cpp\n     Classes/HelloWorldScene.cpp\n     )\nlist(APPEND GAME_HEADER\n     Classes/AppDelegate.h\n     Classes/HelloWorldScene.h\n     )\n\nif(ANDROID)\n    # change APP_NAME to the share library name for Android, it's value depend on AndroidManifest.xml\n    set(APP_NAME MyGame)\n    list(APPEND GAME_SOURCE\n         proj.android/app/jni/hellocpp/main.cpp\n         )\nelseif(LINUX)\n    list(APPEND GAME_SOURCE\n         proj.linux/main.cpp\n         )\nelseif(WINDOWS)\n    list(APPEND GAME_HEADER\n         proj.win32/main.h\n         proj.win32/resource.h\n         )\n    list(APPEND GAME_SOURCE\n         proj.win32/main.cpp\n         proj.win32/game.rc\n         ${common_res_files}\n         )\nelseif(APPLE)\n    if(IOS)\n        list(APPEND GAME_HEADER\n             proj.ios_mac/ios/AppController.h\n             proj.ios_mac/ios/RootViewController.h\n             )\n        set(APP_UI_RES\n            proj.ios_mac/ios/LaunchScreen.storyboard\n            proj.ios_mac/ios/LaunchScreenBackground.png\n            proj.ios_mac/ios/Images.xcassets\n            )\n        list(APPEND GAME_SOURCE\n             proj.ios_mac/ios/main.m\n             proj.ios_mac/ios/AppController.mm\n             proj.ios_mac/ios/RootViewController.mm\n             proj.ios_mac/ios/Prefix.pch\n             ${APP_UI_RES}\n             )\n    elseif(MACOSX)\n        set(APP_UI_RES\n            proj.ios_mac/mac/Icon.icns\n            proj.ios_mac/mac/Info.plist\n            )\n        list(APPEND GAME_SOURCE\n             proj.ios_mac/mac/main.cpp\n             proj.ios_mac/mac/Prefix.pch\n             ${APP_UI_RES}\n             )\n    endif()\n    list(APPEND GAME_SOURCE ${common_res_files})\nendif()\n\n# mark app complie info and libs info\nset(all_code_files\n    ${GAME_HEADER}\n    ${GAME_SOURCE}\n    )\nif(NOT ANDROID)\n    add_executable(${APP_NAME} ${all_code_files})\nelse()\n    add_library(${APP_NAME} SHARED ${all_code_files})\n    add_subdirectory(${COCOS2DX_ROOT_PATH}/cocos/platform/android ${ENGINE_BINARY_PATH}/cocos/platform)\n    target_link_libraries(${APP_NAME} -Wl,--whole-archive cpp_android_spec -Wl,--no-whole-archive)\nendif()\n\ntarget_link_libraries(${APP_NAME} cocos2d)\ntarget_include_directories(${APP_NAME}\n        PRIVATE Classes\n        PRIVATE ${COCOS2DX_ROOT_PATH}/cocos/audio/include/\n)\n\n# mark app resources\nsetup_cocos_app_config(${APP_NAME})\n# PluginFacebook\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginFacebook/)\n    target_link_libraries(${APP_NAME} ext_PluginFacebook)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework FBSDKCoreKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework FBSDKLoginKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework FBSDKShareKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Bolts\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Security\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework AdSupport\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MediaPlayer\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameController\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework WebKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Accelerate\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -ObjC\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginFacebook\")\n    endif()\nendif()\n# PluginShare\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginShare/)\n    target_link_libraries(${APP_NAME} ext_PluginShare)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework TwitterCore\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework TwitterKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Accounts\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreText\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMedia\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreData\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Social\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameController\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MediaPlayer\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MessageUI\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMotion\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SafariServices\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -ObjC\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginShare\")\n    endif()\nendif()\n# PluginIAP\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginIAP/)\n    target_link_libraries(${APP_NAME} ext_PluginIAP)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Security\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework StoreKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginIAP\")\n    endif()\nendif()\n# sdkbox\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/sdkbox/)\n    target_link_libraries(${APP_NAME} ext_sdkbox)\nelseif(APPLE)\n    if(IOS)\n        set_target_properties(${APP_NAME}\n            PROPERTIES\n            XCODE_ATTRIBUTE_FRAMEWORK_SEARCH_PATHS \"\\$(inherited) ${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac\"\n        )\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework sdkbox\")\n    endif()\nendif()\nif(APPLE)\n    set_target_properties(${APP_NAME} PROPERTIES RESOURCE \"${APP_UI_RES}\")\n    if(MACOSX)\n        set_target_properties(${APP_NAME} PROPERTIES\n                              MACOSX_BUNDLE_INFO_PLIST \"${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac/mac/Info.plist\"\n                              )\n    elseif(IOS)\n        cocos_pak_xcode(${APP_NAME} INFO_PLIST \"iOSBundleInfo.plist.in\")\n        set_xcode_property(${APP_NAME} ASSETCATALOG_COMPILER_APPICON_NAME \"AppIcon\")\n        set_xcode_property(${APP_NAME} DEVELOPMENT_TEAM \"\")\n        set_xcode_property(${APP_NAME} CODE_SIGN_IDENTITY \"iPhone Developer\")\n    endif()\nelseif(WINDOWS)\n    cocos_copy_target_dll(${APP_NAME})\nendif()\n\nif(LINUX OR WINDOWS)\n    set(APP_RES_DIR \"$<TARGET_FILE_DIR:${APP_NAME}>/Resources\")\n    cocos_copy_target_res(${APP_NAME} COPY_TO ${APP_RES_DIR} FOLDERS ${GAME_RES_FOLDER})\nendif()\n", 
            "COCOS_PROJECT_HINT": "./", 
            "ANDROID_STUDIO_PROPERTIES": "proj.android/app/project.properties", 
            "VS_PROJECT_PROJ_FILE": "n/a", 
            "check_str": "com.google.android.gms:play-services-drive", 
            "COCOS_ENGINE_TYPE": "unknown", 
            "ANDROID_PROJECT_DIR": "n/a", 
            "ANDROID_COCOS_SRC_DIR": "proj.android/app/src/org/cocos2dx/lib/", 
            "COCOS_CLASSES_DIR": "Classes/", 
            "XCODE_PROJECT": "proj.ios_mac/SuperSwitchRun.xcodeproj/project.pbxproj", 
            "COCOS_ENGINE_MAKER": "cocos2d-x", 
            "ANDROID_STUDIO_ACTIVITY_PATH": "proj.android/app/src/org/cocos2dx/cpp/", 
            "ANDROID_SDK_DIR": "n/a", 
            "COCOS_2DX_ROOT": "unknown", 
            "ANDROID_MANIFEST": "n/a", 
            "ANDROID_STUDIO_MANIFEST": "proj.android/app/AndroidManifest.xml", 
            "ANDROID_JNI_DIR": "n/a", 
            "IOS_PROJECT_DIR": "proj.ios_mac/", 
            "XCODE_PROJECT_CXX_LIBRARY": "libc++", 
            "ANDROID_STUDIO_MK": "proj.android/app/jni/Android.mk", 
            "XCODE_PROJECT_DIR": "proj.ios_mac/SuperSwitchRun.xcodeproj/", 
            "name": "PluginSdkboxPlay", 
            "fw": "-ObjC", 
            "ANDROID_MK_USES_WILDCARDS": "n/a", 
            "cmake_file": "CMakeLists.txt", 
            "COCOS_BACKUP_DIR": "backup-2020-06-11/", 
            "ANDROID_PROPERTIES": "n/a", 
            "SDKBOX_PACKAGE_NAME": "sdkboxplay", 
            "COCOS_RESOURCES_DIR": "Resources/", 
            "ANDROID_STUDIO_LIBS_DIR": "proj.android/app/libs/", 
            "SDKBOX_PLUGIN_NAME": "SdkboxPlay", 
            "ANDROID_LIBS_DIR": "proj.android/app/libs/", 
            "ANDROID_MK": "n/a", 
            "APPLICATION_MK": "n/a"
        }
    }, 
    "facebook": {
        "engine": "3", 
        "name": "facebook", 
        "args": {
            "patcherrors": 0, 
            "project": "./", 
            "noupdate": 0, 
            "nopatchingcpp": 0, 
            "remote": 1, 
            "verbose": 0, 
            "forcecopy": 0, 
            "nohelp": 0, 
            "days": 10, 
            "forcedownload": 0, 
            "command": "import", 
            "manifest": "manifest.json", 
            "alwaysupdate": 0, 
            "installer": "", 
            "server": "download.sdkbox.com/installer/v1/", 
            "local": 0, 
            "nopatching": 0, 
            "jsonapi": 0
        }, 
        "version": [
            2, 
            6, 
            0, 
            1
        ], 
        "result": "ok", 
        "message": "success", 
        "constants": {
            "code": "dependencies { compile 'com.facebook.android:facebook-android-sdk:5.+' }\n", 
            "ANDROID_STUDIO_JNI_DIR": "proj.android/app/jni/", 
            "COCOS_2DX_VERSION": "3.17.2", 
            "COCOS_PROJECT_DIR": "./", 
            "VS_PROJECT_DIR": "n/a", 
            "COCOS_2DX_INSTALLATION_VERSION": "unknown", 
            "proguard_rules": "proj.android/app/proguard-rules.pro", 
            "ANDROID_COCOS_PACKAGE_ROOT": "proj.android/app/", 
            "source_dir": "${CMAKE_CURRENT_SOURCE_DIR}", 
            "flag_line": "setup_cocos_app_config(${APP_NAME})", 
            "marr3": [
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginFacebook\")", 
                "    endif()", 
                "endif()"
            ], 
            "marr2": [
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework FBSDKCoreKit\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework FBSDKLoginKit\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework FBSDKShareKit\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Bolts\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Security\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework AdSupport\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MediaPlayer\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameController\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework WebKit\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Accelerate\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -ObjC\")"
            ], 
            "marr1": [
                "# PluginFacebook", 
                "if(ANDROID)", 
                "    add_definitions(-DSDKBOX_ENABLED)", 
                "    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginFacebook/)", 
                "    target_link_libraries(${APP_NAME} ext_PluginFacebook)", 
                "elseif(APPLE)", 
                "    if(IOS)"
            ], 
            "ANDROID_STUDIO_ACTIVITY_NAME": "AppActivity", 
            "CCC_ENGINE_VERSION": "3.17.2", 
            "XCODE_PROJECT_PREPROCESSOR": "", 
            "proguard_file": "n/proguard-project.txt", 
            "ANDROID_STUDIO_PROJECT_DIR": "proj.android/", 
            "VS_PROJECT_SLN_FILE": "n/a", 
            "content": "#/****************************************************************************\n# Copyright (c) 2013-2014 cocos2d-x.org\n# Copyright (c) 2015-2017 Chukong Technologies Inc.\n#\n# http://www.cocos2d-x.org\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE.\n# ****************************************************************************/\n\ncmake_minimum_required(VERSION 3.6)\n\nset(APP_NAME SuperSwitchRun)\n\nproject(${APP_NAME})\n\nset(COCOS2DX_ROOT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cocos2d)\nset(CMAKE_MODULE_PATH ${COCOS2DX_ROOT_PATH}/cmake/Modules/)\n\ninclude(CocosBuildSet)\nadd_subdirectory(${COCOS2DX_ROOT_PATH}/cocos ${ENGINE_BINARY_PATH}/cocos/core)\n\n# record sources, headers, resources...\nset(GAME_SOURCE)\nset(GAME_HEADER)\n\nset(GAME_RES_FOLDER\n    \"${CMAKE_CURRENT_SOURCE_DIR}/Resources\"\n    )\nif(APPLE OR WINDOWS)\n    cocos_mark_multi_resources(common_res_files RES_TO \"Resources\" FOLDERS ${GAME_RES_FOLDER})\n# ShareResBundle\n    if(IOS)\n        set(ShareResBundle0 \"${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac/TwitterKit.framework/TwitterKitResources.bundle\")\n        list(APPEND common_res_files ${ShareResBundle0})\n        set_source_files_properties(${ShareResBundle0} PROPERTIES MACOSX_PACKAGE_LOCATION Resources)\n    endif()\nendif()\n\n# add cross-platforms source files and header files \nlist(APPEND GAME_SOURCE\n     Classes/AppDelegate.cpp\n     Classes/HelloWorldScene.cpp\n     )\nlist(APPEND GAME_HEADER\n     Classes/AppDelegate.h\n     Classes/HelloWorldScene.h\n     )\n\nif(ANDROID)\n    # change APP_NAME to the share library name for Android, it's value depend on AndroidManifest.xml\n    set(APP_NAME MyGame)\n    list(APPEND GAME_SOURCE\n         proj.android/app/jni/hellocpp/main.cpp\n         )\nelseif(LINUX)\n    list(APPEND GAME_SOURCE\n         proj.linux/main.cpp\n         )\nelseif(WINDOWS)\n    list(APPEND GAME_HEADER\n         proj.win32/main.h\n         proj.win32/resource.h\n         )\n    list(APPEND GAME_SOURCE\n         proj.win32/main.cpp\n         proj.win32/game.rc\n         ${common_res_files}\n         )\nelseif(APPLE)\n    if(IOS)\n        list(APPEND GAME_HEADER\n             proj.ios_mac/ios/AppController.h\n             proj.ios_mac/ios/RootViewController.h\n             )\n        set(APP_UI_RES\n            proj.ios_mac/ios/LaunchScreen.storyboard\n            proj.ios_mac/ios/LaunchScreenBackground.png\n            proj.ios_mac/ios/Images.xcassets\n            )\n        list(APPEND GAME_SOURCE\n             proj.ios_mac/ios/main.m\n             proj.ios_mac/ios/AppController.mm\n             proj.ios_mac/ios/RootViewController.mm\n             proj.ios_mac/ios/Prefix.pch\n             ${APP_UI_RES}\n             )\n    elseif(MACOSX)\n        set(APP_UI_RES\n            proj.ios_mac/mac/Icon.icns\n            proj.ios_mac/mac/Info.plist\n            )\n        list(APPEND GAME_SOURCE\n             proj.ios_mac/mac/main.cpp\n             proj.ios_mac/mac/Prefix.pch\n             ${APP_UI_RES}\n             )\n    endif()\n    list(APPEND GAME_SOURCE ${common_res_files})\nendif()\n\n# mark app complie info and libs info\nset(all_code_files\n    ${GAME_HEADER}\n    ${GAME_SOURCE}\n    )\nif(NOT ANDROID)\n    add_executable(${APP_NAME} ${all_code_files})\nelse()\n    add_library(${APP_NAME} SHARED ${all_code_files})\n    add_subdirectory(${COCOS2DX_ROOT_PATH}/cocos/platform/android ${ENGINE_BINARY_PATH}/cocos/platform)\n    target_link_libraries(${APP_NAME} -Wl,--whole-archive cpp_android_spec -Wl,--no-whole-archive)\nendif()\n\ntarget_link_libraries(${APP_NAME} cocos2d)\ntarget_include_directories(${APP_NAME}\n        PRIVATE Classes\n        PRIVATE ${COCOS2DX_ROOT_PATH}/cocos/audio/include/\n)\n\n# mark app resources\nsetup_cocos_app_config(${APP_NAME})\n# PluginShare\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginShare/)\n    target_link_libraries(${APP_NAME} ext_PluginShare)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework TwitterCore\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework TwitterKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Accounts\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreText\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMedia\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreData\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Social\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework GameController\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MediaPlayer\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework MessageUI\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework CoreMotion\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SafariServices\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -ObjC\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginShare\")\n    endif()\nendif()\n# PluginIAP\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginIAP/)\n    target_link_libraries(${APP_NAME} ext_PluginIAP)\nelseif(APPLE)\n    if(IOS)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Security\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework StoreKit\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginIAP\")\n    endif()\nendif()\n# sdkbox\nif(ANDROID)\n    add_definitions(-DSDKBOX_ENABLED)\n    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/sdkbox/)\n    target_link_libraries(${APP_NAME} ext_sdkbox)\nelseif(APPLE)\n    if(IOS)\n        set_target_properties(${APP_NAME}\n            PROPERTIES\n            XCODE_ATTRIBUTE_FRAMEWORK_SEARCH_PATHS \"\\$(inherited) ${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac\"\n        )\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework sdkbox\")\n    endif()\nendif()\nif(APPLE)\n    set_target_properties(${APP_NAME} PROPERTIES RESOURCE \"${APP_UI_RES}\")\n    if(MACOSX)\n        set_target_properties(${APP_NAME} PROPERTIES\n                              MACOSX_BUNDLE_INFO_PLIST \"${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac/mac/Info.plist\"\n                              )\n    elseif(IOS)\n        cocos_pak_xcode(${APP_NAME} INFO_PLIST \"iOSBundleInfo.plist.in\")\n        set_xcode_property(${APP_NAME} ASSETCATALOG_COMPILER_APPICON_NAME \"AppIcon\")\n        set_xcode_property(${APP_NAME} DEVELOPMENT_TEAM \"\")\n        set_xcode_property(${APP_NAME} CODE_SIGN_IDENTITY \"iPhone Developer\")\n    endif()\nelseif(WINDOWS)\n    cocos_copy_target_dll(${APP_NAME})\nendif()\n\nif(LINUX OR WINDOWS)\n    set(APP_RES_DIR \"$<TARGET_FILE_DIR:${APP_NAME}>/Resources\")\n    cocos_copy_target_res(${APP_NAME} COPY_TO ${APP_RES_DIR} FOLDERS ${GAME_RES_FOLDER})\nendif()\n", 
            "COCOS_PROJECT_HINT": "./", 
            "ANDROID_STUDIO_PROPERTIES": "proj.android/app/project.properties", 
            "VS_PROJECT_PROJ_FILE": "n/a", 
            "check_str": "com.facebook.android:facebook-android-sdk", 
            "COCOS_ENGINE_TYPE": "unknown", 
            "ANDROID_PROJECT_DIR": "n/a", 
            "ANDROID_COCOS_SRC_DIR": "proj.android/app/src/org/cocos2dx/lib/", 
            "COCOS_CLASSES_DIR": "Classes/", 
            "XCODE_PROJECT": "proj.ios_mac/SuperSwitchRun.xcodeproj/project.pbxproj", 
            "COCOS_ENGINE_MAKER": "cocos2d-x", 
            "ANDROID_STUDIO_ACTIVITY_PATH": "proj.android/app/src/org/cocos2dx/cpp/", 
            "ANDROID_SDK_DIR": "n/a", 
            "COCOS_2DX_ROOT": "unknown", 
            "ANDROID_MANIFEST": "n/a", 
            "ANDROID_STUDIO_MANIFEST": "proj.android/app/AndroidManifest.xml", 
            "ANDROID_JNI_DIR": "n/a", 
            "IOS_PROJECT_DIR": "proj.ios_mac/", 
            "XCODE_PROJECT_CXX_LIBRARY": "libc++", 
            "ANDROID_STUDIO_MK": "proj.android/app/jni/Android.mk", 
            "COCOS_RESOURCES_DIR": "Resources/", 
            "XCODE_PROJECT_DIR": "proj.ios_mac/SuperSwitchRun.xcodeproj/", 
            "name": "PluginFacebook", 
            "fw": "-ObjC", 
            "ANDROID_MK_USES_WILDCARDS": "n/a", 
            "cmake_file": "CMakeLists.txt", 
            "COCOS_BACKUP_DIR": "backup-2020-06-11/", 
            "ANDROID_PROPERTIES": "n/a", 
            "SDKBOX_PACKAGE_NAME": "facebook", 
            "gradle_file": "proj.android/libcocos2dx/build.gradle/", 
            "ANDROID_STUDIO_LIBS_DIR": "proj.android/app/libs/", 
            "SDKBOX_PLUGIN_NAME": "Facebook", 
            "ANDROID_LIBS_DIR": "proj.android/app/libs/", 
            "ANDROID_MK": "n/a", 
            "APPLICATION_MK": "n/a"
        }
    }, 
    "iap": {
        "engine": "3", 
        "name": "iap", 
        "args": {
            "patcherrors": 0, 
            "project": "./", 
            "noupdate": 0, 
            "nopatchingcpp": 0, 
            "remote": 1, 
            "verbose": 0, 
            "forcecopy": 0, 
            "nohelp": 0, 
            "days": 10, 
            "forcedownload": 0, 
            "command": "import", 
            "manifest": "manifest.json", 
            "alwaysupdate": 0, 
            "installer": "", 
            "server": "download.sdkbox.com/installer/v1/", 
            "local": 0, 
            "nopatching": 0, 
            "jsonapi": 0
        }, 
        "version": [
            2, 
            6, 
            0, 
            1
        ], 
        "result": "ok", 
        "message": "success", 
        "constants": {
            "ANDROID_STUDIO_JNI_DIR": "proj.android/app/jni/", 
            "COCOS_2DX_VERSION": "3.17.2", 
            "remove_jar": "proj.android/app/libs/PluginGooglePlay.jar/", 
            "VS_PROJECT_DIR": "n/a", 
            "COCOS_2DX_INSTALLATION_VERSION": "unknown", 
            "ANDROID_STUDIO_PROJECT_DIR": "proj.android/", 
            "ANDROID_COCOS_PACKAGE_ROOT": "proj.android/app/", 
            "replace_pattern": "com\\.android\\.billingclient:billing:\\d+(\\.\\d+){0,2}", 
            "source_dir": "${CMAKE_CURRENT_SOURCE_DIR}", 
            "flag_line": "setup_cocos_app_config(${APP_NAME})", 
            "replace_code": "com.android.billingclient:billing:2.0.1", 
            "marr2": [
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework Security\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework StoreKit\")", 
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework SystemConfiguration\")"
            ], 
            "marr1": [
                "# PluginIAP", 
                "if(ANDROID)", 
                "    add_definitions(-DSDKBOX_ENABLED)", 
                "    add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/proj.android/app/jni/PluginIAP/)", 
                "    target_link_libraries(${APP_NAME} ext_PluginIAP)", 
                "elseif(APPLE)", 
                "    if(IOS)"
            ], 
            "ANDROID_STUDIO_ACTIVITY_NAME": "AppActivity", 
            "CCC_ENGINE_VERSION": "3.17.2", 
            "XCODE_PROJECT_PREPROCESSOR": "", 
            "proguard_file": "n/proguard-project.txt", 
            "proguard_rules": "proj.android/app/proguard-rules.pro", 
            "VS_PROJECT_SLN_FILE": "n/a", 
            "content": "#/****************************************************************************\n# Copyright (c) 2013-2014 cocos2d-x.org\n# Copyright (c) 2015-2017 Chukong Technologies Inc.\n#\n# http://www.cocos2d-x.org\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE.\n# ****************************************************************************/\n\ncmake_minimum_required(VERSION 3.6)\n\nset(APP_NAME SuperSwitchRun)\n\nproject(${APP_NAME})\n\nset(COCOS2DX_ROOT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cocos2d)\nset(CMAKE_MODULE_PATH ${COCOS2DX_ROOT_PATH}/cmake/Modules/)\n\ninclude(CocosBuildSet)\nadd_subdirectory(${COCOS2DX_ROOT_PATH}/cocos ${ENGINE_BINARY_PATH}/cocos/core)\n\n# record sources, headers, resources...\nset(GAME_SOURCE)\nset(GAME_HEADER)\n\nset(GAME_RES_FOLDER\n    \"${CMAKE_CURRENT_SOURCE_DIR}/Resources\"\n    )\nif(APPLE OR WINDOWS)\n    cocos_mark_multi_resources(common_res_files RES_TO \"Resources\" FOLDERS ${GAME_RES_FOLDER})\nendif()\n\n# add cross-platforms source files and header files \nlist(APPEND GAME_SOURCE\n     Classes/AppDelegate.cpp\n     Classes/HelloWorldScene.cpp\n     )\nlist(APPEND GAME_HEADER\n     Classes/AppDelegate.h\n     Classes/HelloWorldScene.h\n     )\n\nif(ANDROID)\n    # change APP_NAME to the share library name for Android, it's value depend on AndroidManifest.xml\n    set(APP_NAME MyGame)\n    list(APPEND GAME_SOURCE\n         proj.android/app/jni/hellocpp/main.cpp\n         )\nelseif(LINUX)\n    list(APPEND GAME_SOURCE\n         proj.linux/main.cpp\n         )\nelseif(WINDOWS)\n    list(APPEND GAME_HEADER\n         proj.win32/main.h\n         proj.win32/resource.h\n         )\n    list(APPEND GAME_SOURCE\n         proj.win32/main.cpp\n         proj.win32/game.rc\n         ${common_res_files}\n         )\nelseif(APPLE)\n    if(IOS)\n        list(APPEND GAME_HEADER\n             proj.ios_mac/ios/AppController.h\n             proj.ios_mac/ios/RootViewController.h\n             )\n        set(APP_UI_RES\n            proj.ios_mac/ios/LaunchScreen.storyboard\n            proj.ios_mac/ios/LaunchScreenBackground.png\n            proj.ios_mac/ios/Images.xcassets\n            )\n        list(APPEND GAME_SOURCE\n             proj.ios_mac/ios/main.m\n             proj.ios_mac/ios/AppController.mm\n             proj.ios_mac/ios/RootViewController.mm\n             proj.ios_mac/ios/Prefix.pch\n             ${APP_UI_RES}\n             )\n    elseif(MACOSX)\n        set(APP_UI_RES\n            proj.ios_mac/mac/Icon.icns\n            proj.ios_mac/mac/Info.plist\n            )\n        list(APPEND GAME_SOURCE\n             proj.ios_mac/mac/main.cpp\n             proj.ios_mac/mac/Prefix.pch\n             ${APP_UI_RES}\n             )\n    endif()\n    list(APPEND GAME_SOURCE ${common_res_files})\nendif()\n\n# mark app complie info and libs info\nset(all_code_files\n    ${GAME_HEADER}\n    ${GAME_SOURCE}\n    )\nif(NOT ANDROID)\n    add_executable(${APP_NAME} ${all_code_files})\nelse()\n    add_library(${APP_NAME} SHARED ${all_code_files})\n    add_subdirectory(${COCOS2DX_ROOT_PATH}/cocos/platform/android ${ENGINE_BINARY_PATH}/cocos/platform)\n    target_link_libraries(${APP_NAME} -Wl,--whole-archive cpp_android_spec -Wl,--no-whole-archive)\nendif()\n\ntarget_link_libraries(${APP_NAME} cocos2d)\ntarget_include_directories(${APP_NAME}\n        PRIVATE Classes\n        PRIVATE ${COCOS2DX_ROOT_PATH}/cocos/audio/include/\n)\n\n# mark app resources\nsetup_cocos_app_config(${APP_NAME})\nif(APPLE)\n    set_target_properties(${APP_NAME} PROPERTIES RESOURCE \"${APP_UI_RES}\")\n    if(MACOSX)\n        set_target_properties(${APP_NAME} PROPERTIES\n                              MACOSX_BUNDLE_INFO_PLIST \"${CMAKE_CURRENT_SOURCE_DIR}/proj.ios_mac/mac/Info.plist\"\n                              )\n    elseif(IOS)\n        cocos_pak_xcode(${APP_NAME} INFO_PLIST \"iOSBundleInfo.plist.in\")\n        set_xcode_property(${APP_NAME} ASSETCATALOG_COMPILER_APPICON_NAME \"AppIcon\")\n        set_xcode_property(${APP_NAME} DEVELOPMENT_TEAM \"\")\n        set_xcode_property(${APP_NAME} CODE_SIGN_IDENTITY \"iPhone Developer\")\n    endif()\nelseif(WINDOWS)\n    cocos_copy_target_dll(${APP_NAME})\nendif()\n\nif(LINUX OR WINDOWS)\n    set(APP_RES_DIR \"$<TARGET_FILE_DIR:${APP_NAME}>/Resources\")\n    cocos_copy_target_res(${APP_NAME} COPY_TO ${APP_RES_DIR} FOLDERS ${GAME_RES_FOLDER})\nendif()\n", 
            "COCOS_PROJECT_HINT": "./", 
            "ANDROID_STUDIO_PROPERTIES": "proj.android/app/project.properties/", 
            "VS_PROJECT_PROJ_FILE": "n/a", 
            "COCOS_ENGINE_TYPE": "unknown", 
            "ANDROID_PROJECT_DIR": "n/a", 
            "ANDROID_COCOS_SRC_DIR": "proj.android/app/src/org/cocos2dx/lib/", 
            "COCOS_PROJECT_DIR": "./", 
            "COCOS_CLASSES_DIR": "Classes/", 
            "XCODE_PROJECT": "proj.ios_mac/SuperSwitchRun.xcodeproj/project.pbxproj", 
            "marr3": [
                "        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -framework PluginIAP\")", 
                "    endif()", 
                "endif()"
            ], 
            "COCOS_ENGINE_MAKER": "cocos2d-x", 
            "ANDROID_STUDIO_ACTIVITY_PATH": "proj.android/app/src/org/cocos2dx/cpp/", 
            "ANDROID_SDK_DIR": "n/a", 
            "COCOS_2DX_ROOT": "unknown", 
            "insert_code": "dependencies { compile 'com.android.billingclient:billing:2.1.0' }\n", 
            "ANDROID_MANIFEST": "n/a", 
            "ANDROID_STUDIO_MANIFEST": "proj.android/app/AndroidManifest.xml", 
            "ANDROID_JNI_DIR": "n/a", 
            "IOS_PROJECT_DIR": "proj.ios_mac/", 
            "XCODE_PROJECT_CXX_LIBRARY": "libc++", 
            "ANDROID_STUDIO_MK": "proj.android/app/jni/Android.mk", 
            "XCODE_PROJECT_DIR": "proj.ios_mac/SuperSwitchRun.xcodeproj/", 
            "name": "PluginIAP", 
            "fw": "SystemConfiguration.framework", 
            "ANDROID_MK_USES_WILDCARDS": "n/a", 
            "cmake_file": "CMakeLists.txt", 
            "COCOS_BACKUP_DIR": "backup-2020-06-11/", 
            "ANDROID_PROPERTIES": "n/a", 
            "SDKBOX_PACKAGE_NAME": "iap", 
            "COCOS_RESOURCES_DIR": "Resources/", 
            "ANDROID_STUDIO_LIBS_DIR": "proj.android/app/libs/", 
            "SDKBOX_PLUGIN_NAME": "IAP", 
            "ANDROID_LIBS_DIR": "proj.android/app/libs/", 
            "ANDROID_MK": "n/a", 
            "APPLICATION_MK": "n/a"
        }
    }
}